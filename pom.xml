<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservice-demo</name>
	<description>父项目：统一依赖和插件管理</description>
	<packaging>pom</packaging>
	<url/>

	<!-- 模块声明 -->
	<modules>
<!--		各个子模块-->
		<module>auth-service</module>
	</modules>

	<!-- 属性 定义常用依赖的版本号 -->
	<properties>
		<java.version>17</java.version>
		<lombok.version>1.18.30</lombok.version>
		<spring.boot.version>3.5.5</spring.boot.version>
	</properties>


	<!-- 依赖管理（子模块直接引用版本一致） -->
<!--	只做“版本约束和统一”，不会自动引入依赖。-->
	<dependencyManagement>
<!--		在 dependencyManagement 里，它只是“声明规则”；在普通 <dependencies> 里则是“实际引入依赖”。-->
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>

			<!-- lombok 统一版本 -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 插件统一管理 -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.10.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!--配置仓库（必要时） -->
<!--	<repositories>-->
<!--	</repositories>-->

</project>
